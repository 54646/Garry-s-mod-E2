@name Chair controler
@inputs Active Forward Backward Right Left Speed Bearing Elevation ChangePlayer TargetClosestPlayer LockCamOnTarget
@inputs S:wirelink Shield AtlantisShield Power
@outputs CamPos:vector AimPos:vector CamAng:angle Target:entity
@persist CamPos:vector CamAng:angle N Failed Target:entity

interval(50)

if (first()|duped()){
    S:egpText(1, "", vec2(256,256))
    S:egpText(2, "", vec2(256,220))
    S:egpText(3, "", vec2(256,180))
    S:egpText(4, "", vec2(256,140))
    S:egpText(5, "", vec2(256,120))
    
    Failed = 0
    CamPos = entity():pos()
    holoCreate(1)
    holoModel(1,"torus")
    holoColor(1,vec(0,0,0),0)
    holoPos(1, vec(0,0,0))
    N = 0
}



function void setPos(V:vector){
    holoPos(1, holoEntity(1):toWorld(V))
}

if (LockCamOnTarget&Target){
    holoPos(1, Target:toWorld(vec(0,0,100)))
}
else{
    if (Forward){
        if (Speed){
            setPos(vec(50,0,0))
        }
        else{
            setPos(vec(7,0,0))
        }
    }
    elseif (Backward){
        setPos(vec(-7,0,0))
    }
    if (Left){
        setPos(vec(0,5,0))
    }
    elseif(Right){
        setPos(vec(0,-5,0))
    }
}

if ((~ChangePlayer&ChangePlayer)|Failed){
    findByClass("player")
    findSortByDistance(entity():pos())
    P = findResult((N%findCount())+1)
    if (P:name() != ""){
        S:egpText(2, "Watching: "+P:name(), vec2(256,220))
        holoPos(1,P:pos()+vec(0,0,100))
        Failed = 0
    }
    else{
        Failed = 1
    }
    N+=1
}

if (TargetClosestPlayer&~TargetClosestPlayer){
    findByClass("player")
    findSortByDistance(holoEntity(1):pos())
    Target = find()
    S:egpText(1, "Target: "+Target:name(), vec2(256,256))
}

holoAng(1,ang(vec(-Elevation, Bearing, 0)))

CamAng = holoEntity(1):angles()
CamPos = holoEntity(1):pos()

AimPos = rangerOffset(100000,CamPos,holoEntity(1):forward()):pos()

S:egpText(3, "Shields: "+toString(round(Shield))+"%", vec2(256,180))
S:egpText(4, "Power: "+toString(round(Power))+"%", vec2(256,140))
S:egpText(5, "Atlantis Shield: "+toString(AtlantisShield), vec2(256,100))

#S:egpBox(10,vec2(600,500),vec2(100,100))
#S:egpMaterial(10,"models/props_combine/tprings_globe")


